name: Build and Compile Go project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.20']
        platform: ['linux/amd64', 'linux/arm64']

    # 设置超时时间，防止步骤过长导致自动取消
    timeout-minutes: 30

    # 防止多个同类任务同时运行导致冲突
    concurrency:
      group: build-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      # 暂时禁用缓存以排查问题，确保任务可以正常运行
      # - name: Cache Go modules
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/go/pkg/mod
      #       ~/.cache/go-build
      #     key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
      #     restore-keys: |
      #       ${{ runner.os }}-go-${{ matrix.go-version }}

      - name: Install dependencies
        run: |
          go mod download

      - name: Build for ${{ matrix.platform }}
        env:
          GOOS: linux
          GOARCH: ${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}
        run: |
          go build -o output/${{ matrix.platform }}/main main.go

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-binary
          path: output/${{ matrix.platform }}/
